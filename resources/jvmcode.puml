@startuml "JVM Code Sequences"
autonumber
hide footbox

participant "JVM Extension" as jvmcode order 10
participant "JVM Server" as jvm order 60
participant "Project Ext" as project order 30
participant "Language Ext" as lang order 50

== Get Dependencies and Paths ==
project -> project: RefreshRequest
project -> project: RefreshResult
project -> jvmcode: ProjectUpdateRequest
jvmcode -> jvmcode: JvmProject

== Ensure Compiled ==
== Index Class Files ==





lang -> jvmcode: LanguageRequest
note right of jvmcode
   Watch language files
end note

jvmcode -> lang: lang.RequestCompile
lang -> jvmcode: Diagnostics

jvmcode -> lang: lang.RequestParse
lang -> jvm: Symbols (revolve types, store symbols)
jvm -> jvmcode: Symbols?

jvmcode -> jvmcode: triggerCompletion
jvmcode -> lang: completeForLocation
lang -> jvm: getSymbolOrScopeAtCursor
jvm -> lang: symbol, scope, completions
note right of jvm
- Find symbol or scope by location
  - For dot find the members of the symbol
  - For other 1) symbols in scope (including imports) 2) universe of classes 3) narrow down to appropriate type
  - Pass it thru lang for formatting, additional annotations etc?
end note
lang -> jvmcode: completions

@enduml

createDiagnosticCollection: lang compile
registerCompletionItemProvider: lang, jvm, symbols
registerHoverProvider: ?
registerSignatureProvider: lang formats signature, jvm refelctive signature, symbols
registerDefinitionProvider: symbols
registerTypeDefinitionProvider: symbols
registerImplementationPovider: jvm reflection
registerReferenceProvider: symbols
registerDocumentSymbolProvider: symbols
registerCodeActionProvider: lang (add this info to diagnostics?)
registerCodeLensProvider: jvm, lang, symbols
registerRenameProvider: symbols